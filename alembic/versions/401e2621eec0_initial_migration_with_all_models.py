"""Initial migration with all models

Revision ID: 401e2621eec0
Revises: 
Create Date: 2024-09-19 16:17:03.667557

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '401e2621eec0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('communities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_communities_id'), 'communities', ['id'], unique=False)
    op.create_index(op.f('ix_communities_name'), 'communities', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('resident', 'staff', 'administrator', 'corporate_leader', name='user_role'), nullable=True),
    sa.Column('staff_id', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.create_index(op.f('ix_users_staff_id'), 'users', ['staff_id'], unique=False)
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_number', sa.String(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('resident_id', sa.Integer(), nullable=True),
    sa.Column('floor_number', sa.Integer(), nullable=True),
    sa.Column('room_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['resident_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rooms_id'), 'rooms', ['id'], unique=False)
    op.create_index(op.f('ix_rooms_resident_id'), 'rooms', ['resident_id'], unique=False)
    op.create_index(op.f('ix_rooms_room_number'), 'rooms', ['room_number'], unique=True)
    op.create_table('alexa_devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('last_synced', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_request', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_number_requested', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alexa_devices_device_id'), 'alexa_devices', ['device_id'], unique=True)
    op.create_index(op.f('ix_alexa_devices_id'), 'alexa_devices', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('response_date_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('completed_by_id', sa.Integer(), nullable=True),
    sa.Column('completion_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('task_time_length', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'completed', name='task_status'), nullable=True),
    sa.Column('priority_score', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('alexa_device_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['alexa_device_id'], ['alexa_devices.id'], ),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['completed_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_completion_time'), 'tasks', ['completion_time'], unique=False)
    op.create_index(op.f('ix_tasks_created_at'), 'tasks', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_response_date_time'), 'tasks', ['response_date_time'], unique=False)
    op.create_index(op.f('ix_tasks_title'), 'tasks', ['title'], unique=False)
    op.create_index(op.f('ix_tasks_updated_at'), 'tasks', ['updated_at'], unique=False)
    op.create_table('caregiver_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('caregiver_id', sa.Integer(), nullable=False),
    sa.Column('resident_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('completed', 'pending_review', 'rejected', name='log_status'), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['caregiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['resident_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_caregiver_logs_id'), 'caregiver_logs', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.Enum('sent', 'read', 'acknowledged', name='notification_status'), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('task_assignments',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'task_id')
    )
    op.create_table('notification_recipients',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'notification_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notification_recipients')
    op.drop_table('task_assignments')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_caregiver_logs_id'), table_name='caregiver_logs')
    op.drop_table('caregiver_logs')
    op.drop_index(op.f('ix_tasks_updated_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_title'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_response_date_time'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_completion_time'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_alexa_devices_id'), table_name='alexa_devices')
    op.drop_index(op.f('ix_alexa_devices_device_id'), table_name='alexa_devices')
    op.drop_table('alexa_devices')
    op.drop_index(op.f('ix_rooms_room_number'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_resident_id'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_id'), table_name='rooms')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_users_staff_id'), table_name='users')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_communities_name'), table_name='communities')
    op.drop_index(op.f('ix_communities_id'), table_name='communities')
    op.drop_table('communities')
    # ### end Alembic commands ###
